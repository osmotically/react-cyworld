{"version":3,"sources":["Cyworld.module.css","UserInfo.tsx","enum/CyworldNav.tsx","mini_home/CyworldMiniHomeTitle.tsx","mini_home/CyworldMiniHomeToday.tsx","mini_home/left_panel/CyworldMiniHomeLeftPanelPicture.tsx","mini_home/left_panel/CyworldMiniHomeLeftPanelTodayIs.tsx","mini_home/left_panel/CyworldMiniHomeLeftPanelIntro.tsx","mini_home/left_panel/CyworldMiniHomeLeftPanelDescription.tsx","enum/CyworldConnectionType.tsx","mini_home/left_panel/CyworldMiniHomeLeftPanelConnection.tsx","mini_home/left_panel/CyworldMiniHomeLeftPanel.tsx","mini_home/right_panel/CyworldMiniHomeRightPanelPosts.tsx","mini_home/CyworldMiniHome.tsx","CyworldLogin.tsx","CyworldPrivacy.tsx","CyworldMain.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","UserInfo","createContext","CyworldNavItem","LOGIN","HOMEPAGE","PRIVACY","CyworldMiniHomeTitle","style","color","fontSize","href","position","right","bottom","CyworldMiniHomeToday","textAlign","width","marginRight","CyworldMiniHomeLeftPanelPicture","useState","loading","setLoading","pictureURI","setPictureURI","useEffect","FB","api","response","String","data","url","alt","src","height","CyworldMiniHomeLeftPanelTodayIs","border","borderRadius","backgroundColor","padding","marginBottom","fontWeight","LikeOutlined","CyworldMiniHomeLeftPanelIntro","intro","setIntro","name","className","styles","homeLeftPanelIntroGender","gender","birthday","email","CyworldMiniHomeLeftPanelDescription","isEditShown","setIsEditShown","isHistoryShown","setIsHistoryShown","description","savedTime","descriptions","setDescriptions","editedDescription","setEditedDescription","minHeight","CaretRightFilled","background","onClick","CaretDownFilled","CaretUpFilled","title","visible","onOk","currentTime","Math","round","Date","getTime","newDescriptions","concat","onCancel","TextArea","value","onChange","event","target","autoSize","minRows","maxRows","size","dataSource","renderItem","singleDescription","Item","toISOString","CyworldConnectionType","DIRECT","CLUB","CyworldMiniHomeLeftPanelConnection","menu","setMenu","e","key","selectedKeys","mode","icon","TeamOutlined","GroupOutlined","defaultValue","Option","CyworldMiniHomeLeftPanel","homeLeftPanelDivider","marginTop","CyworldMiniHomeRightPanelPosts","posts","setposts","getTagColorByPostType","postType","length","postList","map","post","homeRightPanelPostsListTag","type","message","homeRightPanelPostsTitle","homeRightPanelPostsSubtitle","homeRightPanelPostsDivider","homeRightPanelPostsList","CyworldMiniHome","useContext","showIcon","homeBlue","homeDashWhite","homeInnerBorder","gutter","span","homeLeftPanel","homeLeftPanelInner","homeRightPanel","homeRightPanelInner","memo","props","userInfo","setUserInfo","logout","appId","autoLoad","fields","scope","textButton","callback","console","log","CyworldPrivacy","rel","marginLeft","Content","Layout","Footer","Sider","CyworldMain","params","URLSearchParams","window","location","search","collapsed","setCollapsed","get","content","Provider","collapsible","onCollapse","theme","set","history","replaceState","pathname","defaultSelectedKeys","margin","UserOutlined","picture","HomeOutlined","WarningOutlined","LoginOutlined","LogoutOutlined","home","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b335ffaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Cyworld_home__tXItM\",\"homeBlue\":\"Cyworld_homeBlue__3vx1O\",\"homeDashWhite\":\"Cyworld_homeDashWhite__1pkxW\",\"homeInnerBorder\":\"Cyworld_homeInnerBorder__2N6s-\",\"homeLeftPanel\":\"Cyworld_homeLeftPanel__1URbF\",\"homeLeftPanelInner\":\"Cyworld_homeLeftPanelInner__3IZ1z\",\"homeLeftPanelDivider\":\"Cyworld_homeLeftPanelDivider__1xno7\",\"homeLeftPanelIntroGender\":\"Cyworld_homeLeftPanelIntroGender__35C6i\",\"homeRightPanel\":\"Cyworld_homeRightPanel__1_zQ6\",\"homeRightPanelInner\":\"Cyworld_homeRightPanelInner__GxsWS\",\"homeRightPanelPostsTitle\":\"Cyworld_homeRightPanelPostsTitle__1MCiv\",\"homeRightPanelPostsSubtitle\":\"Cyworld_homeRightPanelPostsSubtitle__1bNvb\",\"homeRightPanelPostsDivider\":\"Cyworld_homeRightPanelPostsDivider__15Mqi\",\"homeRightPanelPostsList\":\"Cyworld_homeRightPanelPostsList__9xteO\",\"homeRightPanelPostsListTag\":\"Cyworld_homeRightPanelPostsListTag__2Rd2p\"};","import { createContext } from 'react';\r\nimport { ReactFacebookLoginInfo } from 'react-facebook-login';\r\n\r\nexport const UserInfo = createContext<ReactFacebookLoginInfo | null>(null);","const CyworldNavItem = {\r\n  LOGIN: 'login',\r\n  HOMEPAGE: 'homepage',\r\n  PRIVACY: 'privacy',\r\n};\r\n\r\nexport default CyworldNavItem;","import React from 'react';\r\n\r\nfunction CyworldMiniHomeTitle() {\r\n  // Replace this title with the server side string\r\n  const title = 'Edit your own title later!';\r\n  return (\r\n    <>\r\n      <span style={{ color: 'orange', fontSize: '2em' }}>{title}</span>\r\n      <a href=\"/#\" style={{ color: 'grey', fontSize: '12px', position: 'absolute', right: '2%', bottom: '1%' }}>\r\n        https://osmotically.github.io/react-cyworld/\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeTitle;","import React from 'react';\r\n\r\nfunction CyworldMiniHomeToday() {\r\n  // Replace these conts with server side numbers\r\n  const todayVisit = 0;\r\n  const totalVisit = 9999;\r\n  return (\r\n    <div style={{ textAlign: 'center', width: '100%', position: 'absolute', bottom: '5px' }}>\r\n      <span style={{ marginRight: '4px' }}>TODAY</span>\r\n      <span style={{ marginRight: '4px', color: 'red' }}>{todayVisit}</span>\r\n      {`| TOTAL ${totalVisit}`}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeToday;","import React, { useState, useEffect } from 'react';\r\nimport { Spin } from 'antd';\r\n\r\ntype ProfileInfo = { data: { height: number, url: string, width: number } };\r\n\r\nfunction CyworldMiniHomeLeftPanelPicture() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [pictureURI, setPictureURI] = useState<string>('');\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (pictureURI === '') {\r\n      FB.api(\r\n        '/me/picture',\r\n        'get',\r\n        { \"height\": \"320\", \"redirect\": \"false\" },\r\n        function (response: ProfileInfo) {\r\n          setPictureURI(String(response?.data?.url));\r\n        }\r\n      );\r\n    }\r\n    setLoading(false);\r\n  }, [pictureURI]);\r\n\r\n  return (\r\n    loading ? <Spin /> : <img alt=\"profile_pic\" src={pictureURI} width=\"250\" height=\"250\" />\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeLeftPanelPicture;","import React from 'react';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\n\r\nfunction CyworldMiniHomeLeftPanelTodayIs() {\r\n  const todayIsMessage = '최고에요';\r\n\r\n  return (\r\n    <div style={{ border: '1px solid #cbcbcb', borderRadius: '8px', backgroundColor: 'white', padding: '4px 20px', marginBottom: '4px' }}>\r\n      <span style={{ marginRight: '8px', color: '#229ed0', fontWeight: 'bold' }}>TODAY IS..</span>\r\n      <LikeOutlined />\r\n      {todayIsMessage}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeLeftPanelTodayIs;","import React, { useState, useEffect } from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nimport styles from '../../Cyworld.module.css';\r\n\r\ntype IntroInfo = { birthday: string, gender: string, email: string, name: string };\r\n\r\nfunction CyworldMiniHomeLeftPanelIntro() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [intro, setIntro] = useState<IntroInfo | null>(null);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (intro === null) {\r\n      FB.api(\r\n        '/me',\r\n        'get',\r\n        { \"fields\": \"birthday,gender, email, name\" },\r\n        function (\r\n          response: IntroInfo,\r\n        ) {\r\n          setIntro(response);\r\n        }\r\n      );\r\n    }\r\n    setLoading(false);\r\n  }, [intro]);\r\n\r\n  return (\r\n    loading ?\r\n      <Spin /> :\r\n      <div style={{ textAlign: 'left' }}>\r\n        <p style={{ marginBottom: '2px' }}>\r\n          <span style={{ color: '#30447a', fontWeight: 'bold', marginRight: '4px' }}>{intro?.name}</span>\r\n          <span className={styles.homeLeftPanelIntroGender}>\r\n            {intro?.gender === 'male' ? '♂' : '♀'}\r\n          </span>\r\n          <span style={{ fontSize: 'small' }}> {intro?.birthday}</span>\r\n        </p>\r\n        <p style={{ color: '#f86704', fontSize: 'small' }}>{intro?.email}</p>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeLeftPanelIntro;","import React, { useState } from 'react';\r\nimport { Modal, Input, List } from 'antd';\r\nimport { CaretRightFilled, CaretDownFilled, CaretUpFilled } from '@ant-design/icons';\r\n\r\ntype Descriptions = { description: string, savedTime: number };\r\n\r\nfunction CyworldMiniHomeLeftPanelDescription() {\r\n  const [isEditShown, setIsEditShown] = useState<boolean>(false);\r\n  const [isHistoryShown, setIsHistoryShown] = useState<boolean>(false);\r\n  const [descriptions, setDescriptions] = useState<Array<Descriptions>>(\r\n    [{ description: 'Edit your description', savedTime: 1592194086 }]\r\n  );\r\n  const [editedDescription, setEditedDescription] = useState<string>(descriptions?.[0]?.description ?? '');\r\n\r\n  return (\r\n    <div style={{ textAlign: 'left' }}>\r\n      <div style={{ minHeight: '200px' }}>\r\n        {descriptions?.[0]?.description}\r\n      </div>\r\n      <span style={{ color: '#f86704', marginRight: '2px' }}>\r\n        <CaretRightFilled />\r\n      </span>\r\n      <button style={{ color: 'black', marginRight: '16px', border: 'none', background: 'transparent' }} onClick={() => setIsEditShown(true)}>\r\n        Edit\r\n      </button>\r\n      <span style={{ color: '#f86704', marginRight: '2px' }}>\r\n        <CaretRightFilled />\r\n      </span>\r\n      <button style={{ color: 'black', border: 'none', background: 'transparent' }} onClick={() => setIsHistoryShown(true)}>\r\n        History\r\n      </button>\r\n      <span style={{ color: '#969696', position: 'absolute', right: '10%' }}>\r\n        <CaretDownFilled />\r\n        <CaretUpFilled />\r\n      </span>\r\n      <Modal\r\n        title=\"Edit your description\"\r\n        visible={isEditShown}\r\n        onOk={() => {\r\n          const currentTime = Math.round((new Date()).getTime() / 1000);\r\n          const newDescriptions = [{\r\n            description: editedDescription, savedTime: currentTime\r\n          }].concat(descriptions);\r\n          setDescriptions(newDescriptions);\r\n          setIsEditShown(false);\r\n        }}\r\n        onCancel={() => setIsEditShown(false)}\r\n      >\r\n        <Input.TextArea\r\n          value={editedDescription}\r\n          onChange={(event): void => { setEditedDescription(event.target.value) }}\r\n          autoSize={{ minRows: 4, maxRows: 6 }}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        title=\"Description History\"\r\n        visible={isHistoryShown}\r\n        onOk={() => setIsHistoryShown(false)}\r\n        onCancel={() => setIsHistoryShown(false)}\r\n      >\r\n        <List\r\n          size=\"small\"\r\n          dataSource={descriptions}\r\n          renderItem={singleDescription =>\r\n            <List.Item>\r\n              <span style={{ marginRight: '12px' }}>{singleDescription.description}</span>\r\n              <span style={{ color: 'grey' }}>{new Date(singleDescription.savedTime * 1000).toISOString()}</span>\r\n            </List.Item>\r\n          }\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeLeftPanelDescription;","const CyworldConnectionType = {\r\n  DIRECT: 'direct',\r\n  CLUB: 'club',\r\n};\r\n\r\nexport default CyworldConnectionType;","import React, { useState } from 'react';\r\nimport { Menu, Select } from 'antd';\r\nimport { TeamOutlined, GroupOutlined } from '@ant-design/icons';\r\nimport CyworldConnectionType from '../../enum/CyworldConnectionType';\r\n\r\nfunction CyworldMiniHomeLeftPanelConnection() {\r\n  const [menu, setMenu] = useState<string>(CyworldConnectionType.DIRECT);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'left' }}>\r\n      <Menu\r\n        onClick={(e) => setMenu(e.key)}\r\n        selectedKeys={[menu]}\r\n        mode=\"horizontal\"\r\n      >\r\n        <Menu.Item key={CyworldConnectionType.DIRECT} icon={<TeamOutlined />}>\r\n          Direct\r\n        </Menu.Item>\r\n        <Menu.Item key={CyworldConnectionType.CLUB} icon={<GroupOutlined />}>\r\n          Club\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Select style={{ width: '100%' }} defaultValue=\"\">\r\n        <Select.Option value=\"\">★일촌 파도타기</Select.Option>\r\n        <Select.Option value=\"1\">Friend 1</Select.Option>\r\n        <Select.Option value=\"2\">Friend 1</Select.Option>\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeLeftPanelConnection;","import React from 'react';\r\nimport CyworldMiniHomeLeftPanelPicture from './CyworldMiniHomeLeftPanelPicture';\r\nimport CyworldMiniHomeLeftPanelTodayIs from './CyworldMiniHomeLeftPanelTodayIs';\r\nimport CyworldMiniHomeLeftPanelIntro from './CyworldMiniHomeLeftPanelIntro';\r\nimport CyworldMiniHomeLeftPanelDescription from './CyworldMiniHomeLeftPanelDescription';\r\nimport CyworldMiniHomeLeftPanelConnection from './CyworldMiniHomeLeftPanelConnection';\r\n\r\nimport styles from '../../Cyworld.module.css';\r\n\r\nfunction CyworldMiniHomeLeftPanel() {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <CyworldMiniHomeLeftPanelPicture />\r\n      <div className={styles.homeLeftPanelDivider} style={{ marginTop: '12px', marginBottom: '12px' }} />\r\n      <CyworldMiniHomeLeftPanelTodayIs />\r\n      <CyworldMiniHomeLeftPanelDescription />\r\n      <div className={styles.homeLeftPanelDivider} style={{ marginBottom: '24px' }} />\r\n      <CyworldMiniHomeLeftPanelIntro />\r\n      <CyworldMiniHomeLeftPanelConnection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeLeftPanel;","import React, { useState, useEffect } from 'react';\r\nimport { Tag, Skeleton } from 'antd';\r\n\r\nimport styles from '../../Cyworld.module.css';\r\n\r\ntype PostInfo = { message: string, type: string, id: string };\r\n\r\nfunction CyworldMiniHomeRightPanelPosts() {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [posts, setposts] = useState<Array<PostInfo>>([]);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (posts.length === 0) {\r\n      FB.api(\r\n        '/me/posts',\r\n        'get',\r\n        { \"fields\": \"message, type\", \"limit\": \"4\" },\r\n        function (\r\n          response: {\r\n            data: Array<PostInfo>,\r\n            page: { next: string, previous: string },\r\n          },\r\n        ) {\r\n          setposts(response?.data ?? []);\r\n        }\r\n      );\r\n    }\r\n    setLoading(false);\r\n  }, [posts]);\r\n\r\n  // Put this in a seperate util js if needed\r\n  function getTagColorByPostType(postType: String): String {\r\n    switch (postType) {\r\n      case 'status':\r\n        return 'magenta';\r\n      case 'link':\r\n        return 'blue';\r\n      case 'photo':\r\n        return 'gold';\r\n      case 'video':\r\n        return 'purple';\r\n      default:\r\n        return 'cyan';\r\n    }\r\n  }\r\n\r\n  const postList = posts.map(\r\n    post =>\r\n      <li style={{ marginBottom: '5px' }}>\r\n        <Tag\r\n          className={styles.homeRightPanelPostsListTag}\r\n          color={String(getTagColorByPostType(post?.type))}\r\n        >\r\n          {post?.type}\r\n        </Tag>\r\n        {post?.message}\r\n      </li>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <span className={styles.homeRightPanelPostsTitle}>Updated news</span>\r\n      <span className={styles.homeRightPanelPostsSubtitle}>TODAY HISTORY</span>\r\n      <div className={styles.homeRightPanelPostsDivider} />\r\n      {loading ?\r\n        <Skeleton /> :\r\n        <ul className={styles.homeRightPanelPostsList}>\r\n          {postList}\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CyworldMiniHomeRightPanelPosts;","import React, { useContext } from 'react';\r\nimport { UserInfo } from '../UserInfo';\r\nimport { Alert, Col, Row } from 'antd';\r\nimport CyworldMiniHomeTitle from './CyworldMiniHomeTitle';\r\nimport CyworldMiniHomeToday from './CyworldMiniHomeToday';\r\nimport CyworldMiniHomeLeftPanel from './left_panel/CyworldMiniHomeLeftPanel';\r\nimport CyworldMiniHomeRightPanelPosts from './right_panel/CyworldMiniHomeRightPanelPosts';\r\n\r\nimport styles from '../Cyworld.module.css';\r\n\r\nfunction CyworldMiniHome() {\r\n    const userInfo = useContext(UserInfo);\r\n    if (userInfo === null) {\r\n        return <Alert\r\n            message=\"Sign In\"\r\n            description=\"Please sign in to see your FB information in the homepage.\"\r\n            type=\"error\"\r\n            showIcon\r\n        />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.homeBlue}>\r\n            <div className={styles.homeDashWhite}>\r\n                <div className={styles.homeInnerBorder}>\r\n                    <Row gutter={16}>\r\n                        <Col span={6}>\r\n                            <CyworldMiniHomeToday />\r\n                        </Col>\r\n                        <Col span={18}>\r\n                            <CyworldMiniHomeTitle />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={16}>\r\n                        <Col span={6}>\r\n                            <div className={styles.homeLeftPanel}>\r\n                                <div className={styles.homeLeftPanelInner}>\r\n                                    <CyworldMiniHomeLeftPanel />\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={18}>\r\n                            <div className={styles.homeRightPanel}>\r\n                                <div className={styles.homeRightPanelInner}>\r\n                                    <CyworldMiniHomeRightPanelPosts />\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CyworldMiniHome;","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\nimport FacebookLogin, { ReactFacebookLoginInfo } from 'react-facebook-login';\r\n\r\ntype Props = {\r\n  userInfo: ReactFacebookLoginInfo | null,\r\n  setUserInfo: (userInfo: ReactFacebookLoginInfo | null) => void,\r\n};\r\n\r\nfunction CyworldLogin(props: Props) {\r\n  const loginCallback = (userInfo: ReactFacebookLoginInfo) => {\r\n    console.log(userInfo);\r\n    props.setUserInfo(userInfo);\r\n  };\r\n\r\n  if (props.userInfo !== null) {\r\n    return (\r\n      <Button type=\"dashed\" onClick={() => {\r\n        props.setUserInfo(null);\r\n        FB.logout();\r\n      }}>Log Out</Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FacebookLogin\r\n      appId=\"2600949710193273\"\r\n      autoLoad={false}\r\n      size=\"small\"\r\n      fields=\"name,picture\"\r\n      scope=\"public_profile,user_posts\"\r\n      textButton=\"Continue with Facebook\"\r\n      callback={loginCallback}\r\n    />\r\n  );\r\n}\r\n\r\nexport default memo(CyworldLogin);\r\n","import React from 'react';\r\nimport { Alert, Card } from 'antd';\r\n\r\nfunction CyworldPrivacy() {\r\n  return (\r\n    <Card title=\"Privacy Policy\">\r\n      <Alert\r\n        style={{ marginBottom: '8px' }}\r\n        message=\"Warning\"\r\n        description=\"React Cyworld is READ ONLY site. It does not collect any of your information.\"\r\n        type=\"warning\"\r\n        showIcon\r\n      />\r\n      <ul>\r\n        <li>\r\n          React Cyworld is an open source website. You can check Typescript based ReactJS codebase on this\r\n          <a\r\n            href=\"https://github.com/osmotically/react-cyworld/tree/master\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            style={{ marginLeft: '4px' }}>\r\n            github link\r\n          </a>.\r\n        </li>\r\n        <li>\r\n          This website reads your information via FB GraphAPI; however, it does not have any ability (nor storage) to store your personal information.\r\n        </li>\r\n        <li>\r\n          You can think of this mini-homepage as a FB skin.\r\n        </li>\r\n      </ul>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CyworldPrivacy;","import React, { useState } from 'react';\r\nimport { ReactFacebookLoginInfo } from 'react-facebook-login';\r\nimport { UserInfo } from './UserInfo';\r\nimport { Avatar, Layout, Menu } from 'antd';\r\nimport {\r\n  HomeOutlined,\r\n  UserOutlined,\r\n  LoginOutlined,\r\n  LogoutOutlined,\r\n  WarningOutlined,\r\n} from '@ant-design/icons';\r\nimport CyworldNavItem from './enum/CyworldNav';\r\nimport CyworldMiniHome from './mini_home/CyworldMiniHome';\r\nimport CyworldLogin from './CyworldLogin';\r\nimport CyworldPrivacy from './CyworldPrivacy';\r\n\r\nimport styles from './Cyworld.module.css';\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nfunction CyworldMain() {\r\n  const params = new URLSearchParams(window.location.search);\r\n  const [collapsed, setCollapsed] = useState<boolean>(false);\r\n  const [menu, setMenu] = useState<string>(params.get('menu') ?? CyworldNavItem.HOMEPAGE);\r\n  const [userInfo, setUserInfo] = useState<ReactFacebookLoginInfo | null>(null);\r\n\r\n  let content = (\r\n    <UserInfo.Provider value={userInfo} >\r\n      <CyworldMiniHome />\r\n    </UserInfo.Provider>\r\n  );\r\n  if (menu === CyworldNavItem.LOGIN) {\r\n    content = (\r\n      <CyworldLogin userInfo={userInfo} setUserInfo={setUserInfo} />\r\n    );\r\n  } else if (menu === CyworldNavItem.PRIVACY) {\r\n    content = (\r\n      <CyworldPrivacy />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider collapsible collapsed={collapsed} onCollapse={setCollapsed}>\r\n        <Menu theme=\"dark\" onClick={(e) => {\r\n          setMenu(e.key);\r\n          params.set('menu', e.key);\r\n          window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\r\n        }} defaultSelectedKeys={[menu]} mode=\"inline\" >\r\n          <div style={{ margin: '16px' }}>\r\n            {userInfo === null ?\r\n              <Avatar icon={<UserOutlined />} style={{ margin: '0 8px' }} /> :\r\n              <Avatar src={String(userInfo?.picture?.data?.url)} style={{ margin: '0 8px' }} />}\r\n            {!collapsed && `${userInfo === null ? 'Please sign in' : userInfo?.name}`}\r\n          </div>\r\n          <Menu.Item key={CyworldNavItem.HOMEPAGE} icon={<HomeOutlined />}>\r\n            Mini Homepage\r\n          </Menu.Item>\r\n          <Menu.Item key={CyworldNavItem.PRIVACY} icon={<WarningOutlined />}>\r\n            Privacy Policy\r\n          </Menu.Item>\r\n          <Menu.Item key={CyworldNavItem.LOGIN} icon={userInfo === null ? <LoginOutlined /> : <LogoutOutlined />}>\r\n            {`Sign ${userInfo === null ? 'In' : 'Out'}`}\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Content className={styles.home}>\r\n          <div className=\"site-layout-background\" style={{ padding: '24px', minHeight: '360px' }}>\r\n            {content}\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Created by Osmotically</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default CyworldMain;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport CyworldMain from './CyworldMain';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CyworldMain />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}